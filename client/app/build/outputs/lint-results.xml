<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 23.0.2">

    <issue
        id="MissingPrefix"
        severity="Error"
        message="Unexpected namespace prefix &quot;xmlns&quot; found for tag CheckedTextView"
        category="Correctness"
        priority="6"
        summary="Detect XML attributes not using the Android namespace"
        explanation="Most Android views have attributes in the Android namespace. When referencing these attributes you *must* include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.

Similarly, in manifest files, nearly all attributes should be in the `android:` namespace."
        errorLine1="    &lt;CheckedTextView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\services_spinner_view.xml"
            line="8"
            column="22"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing null as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Ensures that a proper parent context is passed to a layout inflater"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="   convertView = inflater.inflate(R.layout.group_item, null);"
        errorLine2="                                                       ~~~~">
        <location
            file="C:\Projekty\Terminarz\app\src\main\java\pl\preter\terminarz\adapters\AppointmentsListAdapter.java"
            line="50"
            column="56"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing null as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Ensures that a proper parent context is passed to a layout inflater"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="   convertView = inflater.inflate(R.layout.group_header, null);"
        errorLine2="                                                         ~~~~">
        <location
            file="C:\Projekty\Terminarz\app\src\main\java\pl\preter\terminarz\adapters\AppointmentsListAdapter.java"
            line="96"
            column="58"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing null as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Ensures that a proper parent context is passed to a layout inflater"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="            convertView = inflater.inflate(R.layout.services_spinner_view, null);"
        errorLine2="                                                                           ~~~~">
        <location
            file="C:\Projekty\Terminarz\app\src\main\java\pl\preter\terminarz\adapters\EmployeeSpinnerAdapter.java"
            line="52"
            column="76"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing null as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Ensures that a proper parent context is passed to a layout inflater"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="            convertView = inflater.inflate(R.layout.services_spinner_view, null);"
        errorLine2="                                                                           ~~~~">
        <location
            file="C:\Projekty\Terminarz\app\src\main\java\pl\preter\terminarz\adapters\EmployeeSpinnerAdapter.java"
            line="65"
            column="76"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing null as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Ensures that a proper parent context is passed to a layout inflater"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="            view = inflater.inflate(R.layout.services_spinner_view, null);"
        errorLine2="                                                                    ~~~~">
        <location
            file="C:\Projekty\Terminarz\app\src\main\java\pl\preter\terminarz\adapters\ServicesSpinnerAdapter.java"
            line="50"
            column="69"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing null as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Ensures that a proper parent context is passed to a layout inflater"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="            view = inflater.inflate(R.layout.services_spinner_view, null);"
        errorLine2="                                                                    ~~~~">
        <location
            file="C:\Projekty\Terminarz\app\src\main\java\pl\preter\terminarz\adapters\ServicesSpinnerAdapter.java"
            line="63"
            column="69"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of com.android.support:support-v4 than 20.0.0 is available: 21.0.0-rc1"
        category="Correctness"
        priority="4"
        summary="Looks for old or obsolete Gradle library dependencies"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    compile &apos;com.android.support:support-v4:20.0.0&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Projekty\Terminarz\app\build.gradle"
            line="22"
            column="5"/>
    </issue>

    <issue
        id="GradlePath"
        severity="Warning"
        message="Avoid using absolute paths in .gradle files"
        category="Correctness"
        priority="4"
        summary="Looks for Gradle path problems such as using platform specific path separators"
        explanation="Gradle build scripts are meant to be cross platform, so file paths use Unix-style path separators (a forward slash) rather than Windows path separators (a backslash). Similarly, to keep projects portable and repeatable, avoid using absolute paths on the system; keep files within the project instead. To share code between projects, consider creating an android-library and an AAR dependency"
        errorLine1="    compile files(&apos;C:/Projekty/Terminarz/libs/volley.jar&apos;)"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Projekty\Terminarz\app\build.gradle"
            line="24"
            column="5"/>
    </issue>

    <issue
        id="Typos"
        severity="Warning"
        message="&quot;Adres&quot; is a common misspelling; did you mean &quot;Address&quot; ?"
        category="Correctness:Messages"
        priority="7"
        summary="Looks for typos in messages"
        explanation="This check looks through the string definitions, and if it finds any words that look like likely misspellings, they are flagged."
        errorLine1="    &lt;string name=&quot;adres_email&quot;>Adres e-mail&lt;/string>"
        errorLine2="                               ^"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\values\strings.xml"
            line="13"
            column="32"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a layout_height of 0dp instead of wrap_content for better performance"
        category="Performance"
        priority="3"
        summary="Looks for inefficient weight declarations in LinearLayouts"
        explanation="When only a single widget in a LinearLayout defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="        android:layout_height=&quot;wrap_content&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_edit.xml"
            line="339"
            column="9"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background #cfcccc with a theme that also paints a background (inferred theme is @android:style/Theme.Holo.Light)"
        category="Performance"
        priority="3"
        summary="Looks for overdraw issues (where a view is painted only to be fully painted over)"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1="                android:background=&quot;#cfcccc&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_details.xml"
            line="6"
            column="17"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background #cfcccc with a theme that also paints a background (inferred theme is @android:style/Theme.Holo.Light)"
        category="Performance"
        priority="3"
        summary="Looks for overdraw issues (where a view is painted only to be fully painted over)"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1="    android:background=&quot;#cfcccc&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_edit.xml"
            line="6"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background #cfcccc with a theme that also paints a background (inferred theme is @android:style/Theme.Holo.Light)"
        category="Performance"
        priority="3"
        summary="Looks for overdraw issues (where a view is painted only to be fully painted over)"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1="    android:background=&quot;#cfcccc&quot;>"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_show_appointments.xml"
            line="6"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background @drawable/placeholder_empty_employees_list with a theme that also paints a background (inferred theme is @android:style/Theme.Holo.Light)"
        category="Performance"
        priority="3"
        summary="Looks for overdraw issues (where a view is painted only to be fully painted over)"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1="    android:background=&quot;@drawable/placeholder_empty_employees_list&quot;>&lt;/ImageView>"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\placeholder_no_employees_list.xml"
            line="8"
            column="5"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.menu.main_menu appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\menu\main_menu.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.main_screen appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\main_screen.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.menu.register_visit appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\menu\register_visit.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.spinner_dropdown_centered_text appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\spinner_dropdown_centered_text.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.string.hello_world appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;hello_world&quot;>Hello world!&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\values\strings.xml"
            line="6"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.string.zarejestruj_wizyt_ appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;zarejestruj_wizyt_&quot;>Zarejestruj wizytę&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\values\strings.xml"
            line="7"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.string.title_activity_register_visit appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;title_activity_register_visit&quot;>RegisterVisitActivity&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\values\strings.xml"
            line="8"
            column="13"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This LinearLayout layout or its RelativeLayout parent is useless; transfer the background attribute to the other view"
        category="Performance"
        priority="2"
        summary="Checks whether a parent layout can be removed."
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="    &lt;LinearLayout"
        errorLine2="    ^"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_details.xml"
            line="288"
            column="5"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This LinearLayout layout or its RelativeLayout parent is useless; transfer the background attribute to the other view"
        category="Performance"
        priority="2"
        summary="Checks whether a parent layout can be removed."
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="        &lt;LinearLayout"
        errorLine2="        ^"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_edit.xml"
            line="299"
            column="9"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This RelativeLayout layout or its FrameLayout parent is useless; transfer the background attribute to the other view"
        category="Performance"
        priority="2"
        summary="Checks whether a parent layout can be removed."
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="&lt;RelativeLayout"
        errorLine2="^"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\group_item.xml"
            line="5"
            column="1"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable res/drawable/placeholder_empty_employees_list.png in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Ensures that images are not defined in the density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon *really* is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\drawable\placeholder_empty_employees_list.png"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use style=&quot;?android:attr/buttonBarButtonStyle&quot; (and ?android:attr/buttonBarStyle on the parent)"
        category="Usability"
        priority="5"
        summary="Ensures that buttons in button bars are borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html"
        errorLine1="        &lt;Button"
        errorLine2="        ^">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_details.xml"
            line="293"
            column="9"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use style=&quot;?android:attr/buttonBarButtonStyle&quot; (and ?android:attr/buttonBarStyle on the parent)"
        category="Usability"
        priority="5"
        summary="Ensures that buttons in button bars are borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html"
        errorLine1="        &lt;Button"
        errorLine2="        ^">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_details.xml"
            line="303"
            column="9"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use style=&quot;?android:attr/buttonBarButtonStyle&quot; (and ?android:attr/buttonBarStyle on the parent)"
        category="Usability"
        priority="5"
        summary="Ensures that buttons in button bars are borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html"
        errorLine1="            &lt;Button"
        errorLine2="            ^">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_edit.xml"
            line="303"
            column="13"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use style=&quot;?android:attr/buttonBarButtonStyle&quot; (and ?android:attr/buttonBarStyle on the parent)"
        category="Usability"
        priority="5"
        summary="Ensures that buttons in button bars are borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html"
        errorLine1="            &lt;Button"
        errorLine2="            ^">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_edit.xml"
            line="313"
            column="13"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use style=&quot;?android:attr/buttonBarButtonStyle&quot; (and ?android:attr/buttonBarStyle on the parent)"
        category="Usability"
        priority="5"
        summary="Ensures that buttons in button bars are borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html"
        errorLine1="            &lt;Button"
        errorLine2="            ^">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_edit.xml"
            line="323"
            column="13"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing contentDescription attribute on image"
        category="Accessibility"
        priority="3"
        summary="Ensures that image widgets provide a contentDescription"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="&lt;ImageView"
        errorLine2="^"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\placeholder_no_employees_list.xml"
            line="3"
            column="1"/>
    </issue>

    <issue
        id="LabelFor"
        severity="Warning"
        message="No label views point to this text field with an android:labelFor=&quot;@+id/@+id/etAppointmentPhoneValueEdit&quot; attribute"
        category="Accessibility"
        priority="2"
        summary="Ensures that text fields are marked with a `labelFor` attribute"
        explanation="Text fields should be labelled with a `labelFor` attribute, provided your `minSdkVersion` is at least 17.

If your view is labeled but by a label in a different layout which includes this one, just suppress this warning from lint."
        errorLine1="            &lt;EditText"
        errorLine2="            ^">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_edit.xml"
            line="201"
            column="13"/>
    </issue>

    <issue
        id="LabelFor"
        severity="Warning"
        message="No label views point to this text field with an android:labelFor=&quot;@+id/@+id/etAppointmentEmailValueEdit&quot; attribute"
        category="Accessibility"
        priority="2"
        summary="Ensures that text fields are marked with a `labelFor` attribute"
        explanation="Text fields should be labelled with a `labelFor` attribute, provided your `minSdkVersion` is at least 17.

If your view is labeled but by a label in a different layout which includes this one, just suppress this warning from lint."
        errorLine1="            &lt;EditText"
        errorLine2="            ^">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_edit.xml"
            line="213"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Telefon&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Telefon&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_details.xml"
            line="66"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Email&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Email&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_details.xml"
            line="79"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Data&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Data&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_details.xml"
            line="92"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Zarejestrowany do&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Zarejestrowany do&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_details.xml"
            line="105"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Godzina&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Godzina&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_details.xml"
            line="118"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Usługa&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Usługa&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_details.xml"
            line="132"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Utworzono&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Utworzono&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_details.xml"
            line="145"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Potwierdzona&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;Potwierdzona&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_details.xml"
            line="157"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Janusz&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Janusz&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_details.xml"
            line="182"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Debug user&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;Debug user&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_details.xml"
            line="193"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;TODO_COMLPETE&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;TODO_COMLPETE&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_details.xml"
            line="296"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;TODO_DELETE&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;TODO_DELETE&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_details.xml"
            line="306"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Telefon&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;Telefon&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_edit.xml"
            line="67"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Email&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;Email&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_edit.xml"
            line="80"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Data&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;Data&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_edit.xml"
            line="93"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Zarejestrowany do&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;Zarejestrowany do&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_edit.xml"
            line="106"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Godzina&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;Godzina&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_edit.xml"
            line="119"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Usługa&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;Usługa&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_edit.xml"
            line="133"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Utworzono&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;Utworzono&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_edit.xml"
            line="146"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Potwierdzona&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;Potwierdzona&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_edit.xml"
            line="158"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;TODO_DELETE&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;TODO_DELETE&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_edit.xml"
            line="306"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;TODO_COMPLETE&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;TODO_COMPLETE&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_edit.xml"
            line="316"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;DEBUG_SAVE&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;DEBUG_SAVE&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_edit.xml"
            line="326"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;asd&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;asd&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\activity_appointment_edit.xml"
            line="340"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Edytuj&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:title=&quot;Edytuj&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\menu\appointment_detail_action_bar.xml"
            line="7"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Zapisz&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:title=&quot;Zapisz&quot; "
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\menu\appointment_detail_action_bar_edit_mode.xml"
            line="7"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Anuluj&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:title=&quot;Anuluj&quot; "
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\menu\appointment_detail_action_bar_edit_mode.xml"
            line="12"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Refresh&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:title=&quot;Refresh&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\menu\appointments_action_bar.xml"
            line="7"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Zarządzaj pracownikami&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:title=&quot;Zarządzaj pracownikami&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\menu\appointments_action_bar.xml"
            line="17"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Janusz Kowalewski&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="  android:text=&quot;Janusz Kowalewski&quot;/>"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\group_header.xml"
            line="20"
            column="3"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;DEBUG_STRING&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;DEBUG_STRING&quot;/>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\navigation_item.xml"
            line="10"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;DEBUG_STRING&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                     android:text=&quot;DEBUG_STRING&quot;/>"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\services_spinner_view.xml"
            line="17"
            column="22"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;12:00&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;12:00&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="C:\Projekty\Terminarz\app\src\main\res\layout\spinner_dropdown_centered_text.xml"
            line="12"
            column="9"/>
    </issue>

</issues>
